{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAoFQ,EACA,EArFF,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,SAAS,aAAa,CAAC,eAC/B,EAAc,SAAS,aAAa,CAAC,OAgH3C,SAAS,EAAY,CAAK,CAAE,CAAI,CAAE,CAAS,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAQ,KAC7C,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,SAAS,aAAa,CAAC,GAsBrC,OApBA,EAAM,YAAY,CAAC,OAAQ,GAC3B,EAAM,YAAY,CAAC,WAAY,IAC/B,EAAM,YAAY,CAAC,UAAW,GAEZ,WAAd,GACF,EAAM,OAAO,CAAC,SAAC,CADjB,EAEI,IAAM,EAAS,SAAS,aAAa,CAAC,UAEtC,EAAO,YAAY,CAAC,QAAS,GAC7B,EAAO,WAAW,CAAG,EACrB,EAAM,MAAM,CAAC,EACf,GAGF,EAAM,WAAW,CAAI,GAA2B,MAAA,CAAzB,CAAK,CAAC,EAAE,CAAC,WAAW,IAAoB,MAAA,CAAf,EAAM,KAAK,CAAC,GAAG,KAE/D,EAAM,MAAM,CAAC,GAEb,EAAM,YAAY,CAAC,OAAQ,GAEpB,CACT,CAvIA,EAAY,KAAK,CAAC,OAAO,CAAI,2EAG7B,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,IA4BI,EAyCF,EAEA,EAtBI,EAEA,EAnDA,EAAS,EAAE,MAAM,CAAC,OAAO,CAAC,YAE3B,IA0BD,EAAc,KAKhB,EAHG,AAxBG,EAwBE,YAAY,CAAC,cA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar tbody = document.querySelector(\"table tbody\");\nvar wrapperForm = document.createElement(\"div\");\nwrapperForm.style.cssText = \"display: flex; flex-direction: column; row-gap: 20px; position: relative\";\n// --------------------SORTING OF TABLE\ntable.addEventListener(\"click\", function(e) {\n    var target = e.target.closest(\"thead th\");\n    if (!target) return;\n    setAttr(target);\n    sort(target);\n});\n// CHANGE STYLES FOR CURRENT ROW\ntable.addEventListener(\"click\", function(e) {\n    var target = e.target.closest(\"tbody tr\");\n    if (!target) return;\n    _to_consumable_array(tbody.rows).forEach(function(el) {\n        el.classList.remove(\"active\");\n    });\n    target.classList.add(\"active\");\n});\n// ---------------------ATTRIBUTE SETTING TO CONTROL SORTING\nfunction setAttr(elem) {\n    var currentAttr = null;\n    if (!elem.hasAttribute(\"data-sort\")) currentAttr = \"asc\";\n    else currentAttr = elem.dataset.sort === \"asc\" ? \"desc\" : \"asc\";\n    var thead = _to_consumable_array(table.rows[0].cells);\n    thead.forEach(function(el) {\n        el.removeAttribute(\"data-sort\");\n    });\n    elem.setAttribute(\"data-sort\", currentAttr);\n}\n//  -------------------------SORTING ELEMENTS\nfunction sort(elem) {\n    var _table_tBodies_, _table_tBodies_1;\n    // WE FIND THE COLUMN INDEX NUMBER\n    var thead = _to_consumable_array(table.rows[0].cells);\n    var currentPos = thead.indexOf(elem);\n    var tableBody = _to_consumable_array(table.rows).slice(1, -1).sort(function(a, b) {\n        var firstValue = a.cells[currentPos].innerHTML;\n        var secondValue = b.cells[currentPos].innerHTML;\n        // WE CHECK WHETHER THESE ARE NUMBERS\n        if (!isNaN(parseFloat(firstValue)) || firstValue.includes(\"$\")) {\n            if (firstValue.includes(\"$\")) {\n                firstValue = firstValue.slice(1).replace(\",\", \".\");\n                secondValue = secondValue.slice(1).replace(\",\", \".\");\n            }\n            return +firstValue - +secondValue;\n        }\n        return firstValue > secondValue ? 1 : -1;\n    });\n    if (elem.dataset.sort === \"desc\") (_table_tBodies_ = table.tBodies[0]).append.apply(_table_tBodies_, _to_consumable_array(tableBody.reverse()));\n    else (_table_tBodies_1 = table.tBodies[0]).append.apply(_table_tBodies_1, _to_consumable_array(tableBody));\n}\nfunction createNewForm() {\n    var formEmployee = document.createElement(\"form\");\n    var button = document.createElement(\"button\");\n    button.setAttribute(\"type\", \"submit\");\n    button.textContent = \"Save to table\";\n    formEmployee.classList.add(\"new-employee-form\");\n    formEmployee.append(createInput(\"name\", \"text\", \"input\"));\n    formEmployee.append(createInput(\"position\", \"text\", \"input\"));\n    formEmployee.append(createInput(\"office\", \"\", \"select\", [\n        \"Tokyo\",\n        \"Singapore\",\n        \"London\",\n        \"New York\",\n        \"Edinburgh\",\n        \"San Francisco\"\n    ]));\n    formEmployee.append(createInput(\"age\", \"number\", \"input\"));\n    formEmployee.append(createInput(\"salary\", \"number\", \"input\"));\n    formEmployee.append(button);\n    wrapperForm.append(formEmployee);\n    wrapperForm.style.alignSelf = \"flex-start\";\n    document.body.append(wrapperForm);\n}\ncreateNewForm();\nfunction createInput(value, type, typeInput) {\n    var array = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n    var label = document.createElement(\"label\");\n    var input = document.createElement(typeInput);\n    input.setAttribute(\"name\", value);\n    input.setAttribute(\"required\", \"\");\n    input.setAttribute(\"data-qa\", value);\n    if (typeInput === \"select\") array.forEach(function(elem) {\n        var option = document.createElement(\"option\");\n        option.setAttribute(\"value\", elem);\n        option.textContent = elem;\n        input.append(option);\n    });\n    label.textContent = \"\".concat(value[0].toUpperCase()).concat(value.slice(1), \":\");\n    label.append(input);\n    input.setAttribute(\"type\", type);\n    return label;\n}\nvar form = document.querySelector(\"form\");\nvar fullName = form.querySelector('[data-qa=\"name\"');\nvar position = form.querySelector('[data-qa=\"position\"');\nvar office = form.querySelector('[data-qa=\"office\"');\nvar age = form.querySelector('[data-qa=\"age\"');\nvar salary = form.querySelector('[data-qa=\"salary\"');\n// ADD NEW EMPLOYEE IN THE TABLE\nform.addEventListener(\"submit\", addNewEmployeeInTable);\nfunction addNewEmployeeInTable(e) {\n    e.preventDefault();\n    if (!checkValidate()) return;\n    var newRow = document.createElement(\"tr\");\n    var salaryChange = \"$\".concat(salary.value, \",000\");\n    var listInfo = [\n        fullName.value,\n        position.value,\n        office.value,\n        age.value,\n        salaryChange\n    ];\n    listInfo.forEach(function(elem) {\n        var newCol = document.createElement(\"td\");\n        newCol.textContent = elem;\n        newRow.append(newCol);\n    });\n    tbody.append(newRow);\n    pushNotification(\"Success\", \"The employee has been successfully added to the database.\", [\n        \"notification\",\n        \"success\"\n    ]);\n    form.reset();\n}\nfunction checkValidate() {\n    if (fullName.value.length < 4) {\n        pushNotification(\"Error of name\", 'The value of \"Name\" must be at least 4 letters.', [\n            \"notification\",\n            \"error\"\n        ]);\n        return false;\n    }\n    if (age.value < 18 || age.value > 90) {\n        pushNotification(\"Error of age\", \"Unfortunately, there is an age restriction.\", [\n            \"notification\",\n            \"error\"\n        ]);\n        return false;\n    }\n    return true;\n}\nfunction pushNotification(title, description, arrayClasses) {\n    var message = document.createElement(\"div\");\n    var titleMessage = document.createElement(\"h2\");\n    var textMessage = document.createElement(\"p\");\n    arrayClasses.forEach(function(el) {\n        message.classList.add(el);\n    });\n    message.setAttribute(\"data-qa\", \"notification\");\n    titleMessage.classList.add(\"title\");\n    titleMessage.textContent = title;\n    textMessage.textContent = description;\n    message.style.cssText = \"position: relative; left: 24px; padding: 1px 24px; color: #f5f5f5;\";\n    message.append(titleMessage);\n    message.append(textMessage);\n    wrapperForm.append(message);\n    setTimeout(function() {\n        message.remove();\n    }, 2000);\n}\n\n//# sourceMappingURL=index.78276edb.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tbody = document.querySelector('table tbody');\nconst wrapperForm = document.createElement('div');\n\nwrapperForm.style.cssText = `display: flex; flex-direction: column; row-gap: 20px; position: relative`;\n\n// --------------------SORTING OF TABLE\ntable.addEventListener('click', (e) => {\n  const target = e.target.closest('thead th');\n\n  if (!target) {\n    return;\n  }\n\n  setAttr(target);\n\n  sort(target);\n});\n\n// CHANGE STYLES FOR CURRENT ROW\ntable.addEventListener('click', (e) => {\n  const target = e.target.closest('tbody tr');\n\n  if (!target) {\n    return;\n  }\n\n  [...tbody.rows].forEach((el) => {\n    el.classList.remove('active');\n  });\n\n  target.classList.add('active');\n});\n\n// ---------------------ATTRIBUTE SETTING TO CONTROL SORTING\nfunction setAttr(elem) {\n  let currentAttr = null;\n\n  if (!elem.hasAttribute('data-sort')) {\n    currentAttr = 'asc';\n  } else {\n    currentAttr = elem.dataset.sort === 'asc' ? 'desc' : 'asc';\n  }\n\n  const thead = [...table.rows[0].cells];\n\n  thead.forEach((el) => {\n    el.removeAttribute('data-sort');\n  });\n\n  elem.setAttribute('data-sort', currentAttr);\n}\n\n//  -------------------------SORTING ELEMENTS\nfunction sort(elem) {\n  // WE FIND THE COLUMN INDEX NUMBER\n  const thead = [...table.rows[0].cells];\n  const currentPos = thead.indexOf(elem);\n\n  const tableBody = [...table.rows].slice(1, -1).sort((a, b) => {\n    let firstValue = a.cells[currentPos].innerHTML;\n    let secondValue = b.cells[currentPos].innerHTML;\n\n    // WE CHECK WHETHER THESE ARE NUMBERS\n    if (!isNaN(parseFloat(firstValue)) || firstValue.includes('$')) {\n      if (firstValue.includes('$')) {\n        firstValue = firstValue.slice(1).replace(',', '.');\n        secondValue = secondValue.slice(1).replace(',', '.');\n      }\n\n      return +firstValue - +secondValue;\n    }\n\n    return firstValue > secondValue ? 1 : -1;\n  });\n\n  if (elem.dataset.sort === 'desc') {\n    table.tBodies[0].append(...tableBody.reverse());\n  } else {\n    table.tBodies[0].append(...tableBody);\n  }\n}\n\nfunction createNewForm() {\n  const formEmployee = document.createElement('form');\n  const button = document.createElement('button');\n\n  button.setAttribute('type', 'submit');\n  button.textContent = 'Save to table';\n\n  formEmployee.classList.add('new-employee-form');\n  formEmployee.append(createInput('name', 'text', 'input'));\n  formEmployee.append(createInput('position', 'text', 'input'));\n\n  formEmployee.append(\n    createInput('office', '', 'select', [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ]),\n  );\n  formEmployee.append(createInput('age', 'number', 'input'));\n  formEmployee.append(createInput('salary', 'number', 'input'));\n  formEmployee.append(button);\n  wrapperForm.append(formEmployee);\n  wrapperForm.style.alignSelf = 'flex-start';\n  document.body.append(wrapperForm);\n}\n\ncreateNewForm();\n\nfunction createInput(value, type, typeInput, array = null) {\n  const label = document.createElement('label');\n  const input = document.createElement(typeInput);\n\n  input.setAttribute('name', value);\n  input.setAttribute('required', '');\n  input.setAttribute('data-qa', value);\n\n  if (typeInput === 'select') {\n    array.forEach((elem) => {\n      const option = document.createElement('option');\n\n      option.setAttribute('value', elem);\n      option.textContent = elem;\n      input.append(option);\n    });\n  }\n\n  label.textContent = `${value[0].toUpperCase()}${value.slice(1)}:`;\n\n  label.append(input);\n\n  input.setAttribute('type', type);\n\n  return label;\n}\n\nconst form = document.querySelector('form');\nconst fullName = form.querySelector('[data-qa=\"name\"');\nconst position = form.querySelector('[data-qa=\"position\"');\nconst office = form.querySelector('[data-qa=\"office\"');\nconst age = form.querySelector('[data-qa=\"age\"');\nconst salary = form.querySelector('[data-qa=\"salary\"');\n\n// ADD NEW EMPLOYEE IN THE TABLE\nform.addEventListener('submit', addNewEmployeeInTable);\n\nfunction addNewEmployeeInTable(e) {\n  e.preventDefault();\n\n  if (!checkValidate()) {\n    return;\n  }\n\n  const newRow = document.createElement('tr');\n\n  const salaryChange = `$${salary.value},000`;\n\n  const listInfo = [\n    fullName.value,\n    position.value,\n    office.value,\n    age.value,\n    salaryChange,\n  ];\n\n  listInfo.forEach((elem) => {\n    const newCol = document.createElement('td');\n\n    newCol.textContent = elem;\n    newRow.append(newCol);\n  });\n\n  tbody.append(newRow);\n\n  pushNotification(\n    'Success',\n    'The employee has been successfully added to the database.',\n    ['notification', 'success'],\n  );\n\n  form.reset();\n}\n\nfunction checkValidate() {\n  if (fullName.value.length < 4) {\n    pushNotification(\n      'Error of name',\n      'The value of \"Name\" must be at least 4 letters.',\n      ['notification', 'error'],\n    );\n\n    return false;\n  }\n\n  if (age.value < 18 || age.value > 90) {\n    pushNotification(\n      'Error of age',\n      'Unfortunately, there is an age restriction.',\n      ['notification', 'error'],\n    );\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction pushNotification(title, description, arrayClasses) {\n  const message = document.createElement('div');\n  const titleMessage = document.createElement('h2');\n  const textMessage = document.createElement('p');\n\n  arrayClasses.forEach((el) => {\n    message.classList.add(el);\n  });\n\n  message.setAttribute('data-qa', 'notification');\n  titleMessage.classList.add('title');\n\n  titleMessage.textContent = title;\n  textMessage.textContent = description;\n\n  message.style.cssText = `position: relative; left: 24px; padding: 1px 24px; color: #f5f5f5;`;\n\n  message.append(titleMessage);\n  message.append(textMessage);\n  wrapperForm.append(message);\n\n  setTimeout(() => {\n    message.remove();\n  }, 2000);\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","formEmployee","button","table","document","querySelector","tbody","wrapperForm","createElement","createInput","value","type","typeInput","array","arguments","label","input","setAttribute","forEach","elem","option","textContent","append","concat","toUpperCase","style","cssText","addEventListener","e","currentAttr","_table_tBodies_","_table_tBodies_1","currentPos","tableBody","target","closest","hasAttribute","dataset","sort","thead","rows","cells","el","removeAttribute","indexOf","a","b","firstValue","innerHTML","secondValue","isNaN","parseFloat","includes","replace","tBodies","apply","reverse","classList","remove","add","alignSelf","body","form","fullName","position","office","age","salary","pushNotification","title","description","arrayClasses","message","titleMessage","textMessage","setTimeout","preventDefault","newRow","salaryChange","listInfo","newCol","reset"],"version":3,"file":"index.78276edb.js.map"}